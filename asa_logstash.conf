#stdin allows input via CLI. Use this for testing.
#file allows for input from file. Use this for moving logs to "production". 
input{
#  stdin{}
    file {
      path =>["/usr/local/var/logstash_data/asa/*.txt"]
      start_position => beginning
      ignore_older => 15184000
    type => "asa"
  }
}


filter {
  #Replaces default "type" value to "ASA-..."
  mutate { replace => { "type" => "ASA" } }

  #Extracts time stamp and rest of data is put into Greedydata for further processing.
  grok{
    match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp %{GREEDYDATA:syslog_message}" }
  }



        # Extract fields from the each of the detailed message types
        grok {
                match => [
                        "message", "%{CISCOFW106001}",
                        "message", "%{CISCOFW106006_106007_106010}",
                        "message", "%{CISCOFW106014}",
                        "message", "%{CISCOFW106015}",
                        "message", "%{CISCOFW106021}",
                        "message", "%{CISCOFW106023}",
                        "message", "%{CISCOFW106100}",
                        "message", "%{CISCOFW110002}",
                        "message", "%{CISCOFW302010}",
                        "message", "%{CISCOFW302013_302014_302015_302016}",
                        "message", "%{CISCOFW302020_302021}",
                        "message", "%{CISCOFW305011}",
                        "message", "%{CISCOFW313001_313004_313008}",
                        "message", "%{CISCOFW313005}",
                        "message", "%{CISCOFW402117}",
                        "message", "%{CISCOFW402119}",
                        "message", "%{CISCOFW419001}",
                        "message", "%{CISCOFW419002}",
                        "message", "%{CISCOFW500004}",
                        "message", "%{CISCOFW602303_602304}",
                        "message", "%{CISCOFW710001_710002_710003_710005_710006}",
                        "message", "%{CISCOFW713172}",
                        "message", "%{CISCOFW733100}"
                ]
       }

       #Takes the extracted the time value above in the grok filter, e.g.;"syslog_timestamp" and uses DATE filter to parse the value into @timestamp.
       #This allows the logs to be indexed at the actual time of the event noted in the log versus date processed by logstash.
       date {
         match => [ "syslog_timestamp", "MMM dd HH:mm:ss","MMM d HH:mm:ss","MMM dd yyyy HH:mm:ss","MMM d yyyy HH:mm:ss" ]
       } 
      
}

#Elasticsearch output option sends logs to Elasticsearch and Kibana. Only use this option when pushing data to "production".
#Stdout outputs to CLI. Use this for testing. 
output { 
  elasticsearch { 
    hosts => ["localhost:9200"]
    index => ["asa"]
  }
  # stdout {
  #   codec => rubydebug
  # }
}
