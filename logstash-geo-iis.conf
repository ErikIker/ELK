input {
stdin{}
file{
  path => "/usr/local/var/logstash_data/iis_geo/*.log"
  start_position => beginning
  ignore_older => 15184000
  }
}

filter {
 
  #ignore log comments
  if [message] =~ "^#" {
    drop {}
  }
grok {
match => ["message", "%{TIMESTAMP_ISO8601:log_timestamp} %{WORD:service} %{WORD:serverName} %{IP:serverIP} %{WORD:method} %{NOTSPACE:uriStem} %{NOTSPACE:uriQuery} %{NUMBER:port} %{NOTSPACE:username} %{IPORHOST:clientIP} %{NOTSPACE:protocolVersion} %{NOTSPACE:userAgent} %{NOTSPACE:cookie} %{NOTSPACE:referer} %{NOTSPACE:requestHost} %{NUMBER:statusCode} %{NUMBER:win32response} %{NUMBER:bytesSent} %{NUMBER:bytesReceived} %{NUMBER:timetaken} %{NOTSPACE:geocity} %{NOTSPACE:geocountry}"]
  }

useragent {
source => "userAgent"
prefix=> "browser"
}

date {
  match => [ "log_timestamp", "YYYY-MM-dd HH:mm:ss" ]
    timezone => "Etc/UTC"
}
## If the log record has a value for 'bytesSent', then add a new field
  #   to the event that converts it to kilobytes
  #
if [bytesSent] {
  ruby {
    code => "event['kilobytesSent'] = event['bytesSent'].to_i / 1024.0"
  }
}


## Do the same conversion for the bytes received value
#
if [bytesReceived] {
  ruby {
    code => "event['kilobytesReceived'] = event['bytesReceived'].to_i / 1024.0"
  }
}
}
output {
  # stdout { codec => rubydebug }
  elasticsearch { 
  hosts => ["localhost:9200"] 
  index => "geo-iis"
  }
}